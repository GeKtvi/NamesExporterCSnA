<Window x:Class="NamesExporterCSnA.View.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:localV="clr-namespace:NamesExporterCSnA.View" 
        xmlns:localVM="clr-namespace:NamesExporterCSnA.ViewModel" 
        xmlns:conv="clr-namespace:NamesExporterCSnA.View.Converters"
        xmlns:tk="clr-namespace:GeKtviWpfToolkit.Controls;assembly=GeKtviWpfToolkit"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=localVM:MainWindowViewModel}"
        d:Width="700"
        d:Height="500"
        x:Name="Window"
        Title="Export Helper" 
        xmlns:properties="clr-namespace:NamesExporterCSnA.Properties"
        Top=            "{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.Top,         Mode=TwoWay}"
        Left=           "{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.Left,        Mode=TwoWay}"
        Width=          "{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.Width,       Mode=TwoWay}"
        Height=         "{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.Height,      Mode=TwoWay}"
        WindowState=    "{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.WindowState, Mode=TwoWay}"
        MinHeight="150"
        MinWidth="600"
        ui:TitleBar.ExtendViewIntoTitleBar="True"
        ui:TitleBar.BackButtonStyle="{DynamicResource AppTitleBarBackButtonStyle}"
        ui:WindowHelper.UseModernWindowStyle="True">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainWindowResourses.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <conv:LoggerStatusToBrushConverter x:Key="LoggerStatusToBrushConverter"/>
            <conv:LoggerStatusToVisibleConverter x:Key="LoggerStatusToVisibleConverter"/>
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Command="{Binding ImportData}" Gesture="Ctrl+Shift+V"/>
        <KeyBinding Command="{Binding ExportData}" Gesture="Ctrl+Shift+C"/>
        <KeyBinding Command="{Binding ClearData}" Gesture="Ctrl+Shift+D"/>
    </Window.InputBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <!--#region TitleBar-->
        <Grid
            x:Name="AppTitleBar"
            Height="{Binding ElementName=Window, Path=(ui:TitleBar.Height)}"
            >

            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="TextElement.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive, ElementName=Window}" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=Window, Path=(ui:TitleBar.SystemOverlayLeftInset)}" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding ElementName=Window, Path=(ui:TitleBar.SystemOverlayRightInset)}" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Grid.ColumnSpan="999" Text="{Binding ElementName=Window, Path=Title}" HorizontalAlignment="Center" VerticalAlignment="Center" />

            <ui:TitleBarButton 
                Grid.Column="2" 
                Width="45" 
                ToolTip="Импортировать из буфера (Ctrl+Shift+V)"
                Command="{Binding ImportData}">
                <ui:TitleBarButton.Content>
                    <ui:SymbolIcon Symbol="Download"/>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >

            <ui:TitleBarButton 
                Grid.Column="3" 
                Width="45" 
                ToolTip="Экспортировать в буфер (Ctrl+Shift+C)" 
                Command="{Binding ExportData}">
                <ui:TitleBarButton.Content>
                    <ui:SymbolIcon Symbol="Upload"/>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >

            <ui:TitleBarButton 
                Grid.Column="4" 
                Width="45" 
                ToolTip="Очистить входные данные (Ctrl+Shift+D)"
                Command="{Binding ClearData}">
                <ui:TitleBarButton.Content>
                    <ui:SymbolIcon Symbol="ClearSelection"/>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >


            <ui:TitleBarButton  
                MinWidth="100"
                Grid.Column="5" 
                >
                <ui:TitleBarButton.Content>
                    <ComboBox Grid.Column="1" SelectedItem="{Binding SelectedCableMarkVendor}" ItemsSource="{Binding CableMarksVendors}"  MinWidth="100">

                    </ComboBox>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >

            <ui:TitleBarButton 
                Grid.Column="7" 
                Width="45" 
                ToolTip="Показать окно проблем при обновлении"
                Click="ShowUpdateFails"
                Visibility="{Binding Logger.Status, Converter={StaticResource LoggerStatusToVisibleConverter}, Delay=10}"
                Background="{Binding Logger.Status, Converter={StaticResource LoggerStatusToBrushConverter}, Delay=10}">               
                <ui:TitleBarButton.Content>
                    <ui:SymbolIcon Symbol="Important"/>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >

            <ui:TitleBarButton  
                Width="45" 
                Grid.Column="8" 
                Click="ShowSettings"
                >
                <ui:TitleBarButton.Content>
                    <ui:SymbolIcon Symbol="Setting"/>
                </ui:TitleBarButton.Content>
            </ui:TitleBarButton >

        </Grid>
        <!--#endregion-->
        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.FirstColumn, Mode=TwoWay}" MinWidth="200"/>
                <ColumnDefinition Width="{Binding Source={x:Static properties:UI.Default}, Path=Default.MainWindowSettings.SecondColumn, Mode=TwoWay}" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border x:Name="LeftBorder" Style="{DynamicResource BorderStyle}" Grid.Column="0">
                <tk:DataGridGK 
                    Margin="1"
                    UseDirectPaste="True"
                    Style="{StaticResource DefaultDataGridStyle}"
                    ItemsSource="{Binding DataIn, UpdateSourceTrigger=PropertyChanged, Delay=250}"
                    CanUserResizeRows="False"
                    SelectionUnit="CellOrRowHeader" 
                    AutoGenerateColumns="False" 
                    HorizontalScrollBarVisibility="Visible"
                    GridLinesVisibility="All">

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Обозначение"  Binding="{Binding SchemeName,     UpdateSourceTrigger=PropertyChanged, Delay=2500}" Width="Auto"/>
                        <DataGridTextColumn Header="Наименование" Binding="{Binding WireName,       UpdateSourceTrigger=PropertyChanged, Delay=2500}" Width="Auto"/>
                    </DataGrid.Columns>

                </tk:DataGridGK>
            </Border>

            <GridSplitter Grid.Column="0" Width="7" HorizontalAlignment="Right" Grid.ZIndex="1" Background="Transparent"/>
            <GridSplitter Grid.Column="1" Width="7" HorizontalAlignment="Left"  Grid.ZIndex="1" Background="Transparent"/>

            <Border Style="{DynamicResource BorderStyle}" Grid.Column="2">
                <tk:DataGridGK
                    Margin="1"
                    Style="{StaticResource DefaultDataGridStyle}"
                    ItemsSource="{Binding Source={StaticResource GroupedDataOut}, UpdateSourceTrigger=PropertyChanged}"
                    CanUserResizeRows="False"
                    SelectionUnit="CellOrRowHeader" 
                    HorizontalScrollBarVisibility="Auto"
                    GridLinesVisibility="All" 
                    IsReadOnly="True">
                    <DataGrid.GroupStyle>
                        <GroupStyle
                            ContainerStyle="{StaticResource DataGridRowGroupContainerStyle}"
                            HeaderTemplate="{StaticResource RowGroupHeaderTemplate}" />
                    </DataGrid.GroupStyle>
                </tk:DataGridGK>
            </Border>
        </Grid>
    </Grid>


</Window>
